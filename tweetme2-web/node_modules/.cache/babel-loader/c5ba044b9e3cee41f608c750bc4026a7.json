{"ast":null,"code":"var _jsxFileName = \"/home/geoffreymeier/Documents/school/2020-21/cs481/tweetme2/tweetme2-web/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift({\n      content: newVal,\n      likes: 0,\n      id: 12313\n    });\n    setNewTweets(tempNewTweets);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    name: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetsList, {\n    newTweets: newTweets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }));\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handeClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        // unlike\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        //like \n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handeClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: 'like',\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  })));\n}\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState(props.newTweets ? props.newTweets : []);\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    //perform lookup in backend\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweetsInit(response);\n      } else alert(\"There was an error!\");\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{tweet.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/home/geoffreymeier/Documents/school/2020-21/cs481/tweetme2/tweetme2-web/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","handleSubmit","event","preventDefault","newVal","current","value","tempNewTweets","unshift","content","likes","id","className","ActionBtn","tweet","action","setLikes","userLike","setUserLike","actionDisplay","display","handeClick","type","Tweet","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","final","concat","length","myCallback","response","status","alert","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup'\n\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef()\n  const [newTweets, setNewTweets] = useState([])\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift({\n      content: newVal,\n      likes: 0,\n      id: 12313\n    })\n    setNewTweets(tempNewTweets)\n    textAreaRef.current.value = ''\n  }\n\n  return <div className={props.className}>\n    <div className='col-12 mb-3'>\n      <form onSubmit={handleSubmit}>\n        <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n        </textarea>\n        <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n      </form>\n    </div>\n    <TweetsList newTweets={newTweets}/>\n  </div>\n}\n\nexport function ActionBtn(props) {\n  const { tweet, action } = props\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n  const [userLike, setUserLike] = useState(tweet.userLike ? true : false)\n  const className = props.className ? props.className : 'btn btn-primary btn-sm'\n  const actionDisplay = action.display ? action.display : 'Action'\n\n  const handeClick = (event) => {\n    event.preventDefault()\n    if (action.type === 'like') {\n      if (userLike === true) {\n        // unlike\n        setLikes(likes - 1)\n        setUserLike(false)\n      }\n      else {\n        //like \n        setLikes(likes + 1)\n        setUserLike(true)\n      }\n    }\n  }\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n\n  return <button className={className} onClick={handeClick}>{display}</button>;\n}\n\nexport function Tweet(props) {\n  const { tweet } = props\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n  return <div className={className}>\n    <p>{tweet.id} - {tweet.content}</p>\n    <div className='btn btn-group'>\n      <ActionBtn tweet={tweet} action={{ type: 'like', display: \"Likes\" }} />\n      <ActionBtn tweet={tweet} action={{ type: \"unlike\", display: \"Unlike\" }} />\n      <ActionBtn tweet={tweet} action={{ type: \"retweet\", display: \"Retweet\" }} />\n    </div>\n  </div>\n}\n\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState(props.newTweets ? props.newTweets : [])\n  const [tweets, setTweets] = useState([])\n  useEffect(() => { \n    const final = [...props.newTweets].concat(tweetsInit)\n    if (final.length !== tweets.length) {\n      setTweets(final)      \n    }\n  }, [props.newTweets, tweets, tweetsInit])\n\n  useEffect(() => {\n    //perform lookup in backend\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        \n        setTweetsInit(response)\n\n      }\n      else\n        alert(\"There was an error!\")\n    }\n    loadTweets(myCallback)\n\n  }, [])\n\n  return tweets.map((item, index) => {\n    return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{tweet.id}`} />\n  })\n}"]},"metadata":{},"sourceType":"module"}